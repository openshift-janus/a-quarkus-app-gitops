apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  labels:
    app.kubernetes.io/instance: '{{ .Values.app.name }}'
    app.kubernetes.io/name: '{{ .Values.app.name }}'
    operator.tekton.dev/operand-name: openshift-pipelines-addons
    pipeline.openshift.io/runtime: java
    pipeline.openshift.io/runtime-version: openjdk-17-ubi8
    pipeline.openshift.io/type: kubernetes
  name: '{{ .Values.app.name }}-pipeline'
spec:
  params:
  - default: '{{ .Values.app.name }}'
    name: APP_NAME
    type: string
  - name: source-repo
    description: source repo that contains the application code
    type: string
    default: '{{ .Values.git.repo }}'
  - name: source-branch
    description: source branch to build from
    default: '{{ .Values.git.branch }}'
    type: string
  - default: image-registry.openshift-image-registry.svc:5000/$(params.APP_NAME)-dev/$(params.APP_NAME)
    name: IMAGE_NAME
    type: string
  - default: .
    name: PATH_CONTEXT
    type: string
  - default: openjdk-17-ubi8
    name: VERSION
    type: string
  - default: workshop
    name: IMAGESTREAM
    type: string
  - default: latest
    name: IMAGESTREAMTAG
    type: string
  # I didn't install Quay , so I used internal registry instead
  - default: image-registry.openshift-image-registry.svc:5000
    name: QUAY_URL
    type: string
  - default: '{{ .Values.devops.repo }}'
    name: DEVOPS_REPO
    type: string
  - default: '{{ .Values.devops.branch }}'
    name: DEVOPS_BRANCH
    type: string
  - default: '{{ .Values.devops.filepath }}'
    name: FILEPATH
    type: string

  # params:
  # - default: workshop
  #   name: APP_NAME
  #   type: string
  # - default: https://github.com/devsecops-workshop/quarkus-build-options.git
  #   name: GIT_REPO
  #   type: string
  # - name: GIT_REVISION
  #   type: string
  # - default: quay-quay-quay.apps.<DOMAIN>/openshift_workshop-int/workshop
  #   name: IMAGE_NAME
  #   type: string
  # - default: .
  #   name: PATH_CONTEXT
  #   type: string
  # - default: openjdk-17-ubi8
  #   name: VERSION
  #   type: string
  # - default: workshop
  #   name: IMAGESTREAM
  #   type: string
  # - default: latest
  #   name: IMAGESTREAMTAG
  #   type: string
  # - default: quay-quay-quay.apps.cluster-2mb4j.2mb4j.sandbox411.opentlc.com
  #   name: QUAY_URL
  #   type: string
  # - default: https://repository-git.apps.cluster-2mb4j.2mb4j.sandbox411.opentlc.com/gitea/openshift-gitops-getting-started.git
  #   name: GIT_CONFIG_REPO
  #   type: string
  tasks:
  - name: fetch-repository
    params:
    - name: url
      value: $(params.source-repo)
    - name: revision
      value: $(params.source-branch)
    - name: deleteExisting
      value: "true"
    taskRef:
      kind: ClusterTask
      name: git-clone
    workspaces:
    - name: output
      workspace: workspace

  - name: package
    params:
      - name: MAVEN_MIRROR_URL
        value: 'http://nexus-cache-repo-sonatype-nexus-service.openshift-devspaces:8081/repository/maven-public/'
    runAfter:
      - fetch-repository
    taskRef:
      kind: ClusterTask
      name: maven
    workspaces:
      - name: source
        workspace: workspace
      - name: maven-settings
        workspace: maven-settings
  
  - name: build
    params:
      - name: IMAGE
        value: "$(params.IMAGE_NAME)"
    runAfter:
      - package
    taskRef:
      kind: Task
      name: kaniko
    workspaces:
    - name: source
      workspace: workspace

  # Skip Quay publish here
  # - name: skopeo-copy
  #   params:
  #   - name: srcImageURL
  #     value: docker://$(params.QUAY_URL)/$(params.APP_NAME)-int/$(params.APP_NAME):latest
  #   - name: destImageURL
  #     value: docker://$(params.QUAY_URL)/$(params.APP_NAME)-prod/$(params.APP_NAME):latest
  #   - name: srcTLSverify
  #     value: "false"
  #   - name: destTLSverify
  #     value: "false"
  #   runAfter:
  #   - build
  #   taskRef:
  #     kind: ClusterTask
  #     name: skopeo-copy
  #   workspaces:
  #   - name: images-url
  #     workspace: workspace
  # - name: rox-image-check
  #   runAfter:
  #     - build
  #   taskRef:
  #     kind: ClusterTask
  #     name: rox-image-check
  #   params:
  #     - name: rox_central_endpoint
  #       value: roxsecrets
  #     - name: rox_api_token
  #       value: roxsecrets
  #     - name: image
  #       value: >-
  #         image-registry.openshift-image-registry.svc:5000/$(params.APP_NAME)-dev/$(params.APP_NAME)
  #     - name: image_digest
  #       value: '$(tasks.build.results.IMAGE_DIGEST)'

  # - name: update-deploy
  #   runAfter:
  #     # - rox-image-check
  #     - build
  #   taskRef:
  #     kind: ClusterTask
  #     name: openshift-client
  #   params:
  #     - name: SCRIPT
  #       value: >-
  #         oc patch deploy/$(params.APP_NAME)-dev-quarkus-template -p
  #         '{"spec":{"template":{"spec":{"containers":[{"name":"quarkus-template","image":"image-registry.openshift-image-registry.svc:5000/$(params.APP_NAME)-dev/$(params.APP_NAME)@$(tasks.build.results.IMAGE_DIGEST)"}]}}}}'
  #     - name: VERSION
  #       value: latest

  # - name: update-deploy
  #   runAfter:
  #     # - rox-image-check
  #     - build
  #   taskRef:
  #     kind: ClusterTask
  #     name: openshift-client
  #   params:
  #     - name: SCRIPT
  #       value: >-
  #         oc patch deploy/$(params.APP_NAME)-dev-quarkus-template -p
  #         '{"spec":{"template":{"spec":{"containers":[{"name":"quarkus-template","image":"image-registry.openshift-image-registry.svc:5000/$(params.APP_NAME)-dev/$(params.APP_NAME)@$(tasks.build.results.IMAGE_DIGEST)"}]}}}}'
  #     - name: VERSION
  #       value: latest

  # - name: deploy
  #   params:
  #   - name: SCRIPT
  #     value: oc rollout status deploy/$(params.APP_NAME)-dev-quarkus-template
  #   runAfter:
  #   - update-deploy
  #   taskRef:
  #     kind: ClusterTask
  #     name: openshift-client

  # - name: git-update-deployment
  #   params:
  #   - name: GIT_REPOSITORY
  #     value: $(params.GIT_CONFIG_REPO)
  #   - name: CURRENT_IMAGE
  #     value: image-registry.openshift-image-registry.svc:5000/$(params.APP_NAME)-prod/$(params.APP_NAME):latest
  #   - name: NEW_IMAGE
  #     value: image-registry.openshift-image-registry.svc:5000/$(params.APP_NAME)-prod/$(params.APP_NAME)
  #   - name: NEW_DIGEST
  #     value: $(tasks.build.results.IMAGE_DIGEST)
  #   - name: KUSTOMIZATION_PATH
  #     value: environments/dev
  #   runAfter:
  #   - deploy
  #   taskRef:
  #     kind: Task
  #     name: git-update-deployment
  #   workspaces:
  #   - name: workspace
  #     workspace: workspace
  - name: yq-and-git-push
    taskRef:
      name: yq-and-git-push
    workspaces:
      - name: workspace
        workspace: workspace
    params:
      - name: file-path
        value: $(params.FILEPATH)
      - name: image-tag
        value: $(tasks.build.results.IMAGE_DIGEST)
      - name: helm-chart-git-url
        value: $(params.DEVOPS_REPO)  
      - name: helm-chart-git-revision
        value: $(params.DEVOPS_BRANCH)
    runAfter:
    - build
  workspaces:
  - name: workspace
  - name: maven-settings
