---
apiVersion: triggers.tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: '{{ .Values.app.name }}-run-pipeline'
spec:
  params:
    # - name: git-revision
    #   description: The git revision
    #   default: '{{ .Values.git.branch }}'
    # - name: source-repo
    #   description: The repo url
    # - name: GIT_REF
    #   description: Git REF (eg HEAD, or TAG)
    # - name: MAVEN_MIRROR_URL
    #   description: MAVEN MIRROR URL

    # - name: SONARQUBE_HOST_URL
    #   description: Sonarqube host url
    # - name: SONARQUBE_PROJECT_KEY
    #   description: Sonarqube Project Key
    # - name: tlsVerify
    #   description: 
    # - name: IMAGE_REPO
    #   description: target image repository name
  - name: source-repo
    description: source repo that contains the application code
    default: '{{ .Values.git.repo }}'
  - name: git-revision
    description: source branch to build from
    

  - name: MAVEN_MIRROR_URL
    

  - name: SONARQUBE_HOST_URL
    
  - name: SONARQUBE_PROJECT_KEY
    
  - name: SONARQUBE_PROJECT_SECRET
    

  - name: TLSVERIFY
    
  # - name: BUILD_EXTRA_ARGS
  #   
  - name: GIT_REVISION
    
  - name: GIT_REF
    
  - name: COMMIT_DATE
    
  - name: COMMIT_AUTHOR
    
  - name: COMMIT_MESSAGE
    
  - name: IMAGE_REPO
    
  - name: IMAGE_TAG
    
  resourcetemplates:
    - apiVersion: tekton.dev/v1beta1
      kind: PipelineRun
      metadata:
        name: $(uid)
      spec:
        params:
          - name: source-repo
            value: $(tt.params.source-repo)
          - name: git-revision
            value: $(tt.params.git-revision)
          - name: MAVEN_MIRROR_URL
            value: $(tt.params.MAVEN_MIRROR_URL)
          - name: SONARQUBE_HOST_URL
            value: $(tt.params.SONARQUBE_HOST_URL)
          - name: SONARQUBE_PROJECT_KEY
            value: $(tt.params.SONARQUBE_PROJECT_KEY)
          - name: SONARQUBE_PROJECT_SECRET
            value: sonarqube-access-token
          - name: TLSVERIFY
            value: true
          # - name: BUILD_EXTRA_ARGS
          #   value: $(tt.params.IMAGE_REPO)
          # - name: GIT_REVISION
          #   value: $(tt.params.git-revision)
          - name: GIT_REF
            value: $(tt.params.GIT_REF)
          - name: COMMIT_DATE
            value: $(tt.params.COMMIT_DATE)
          - name: COMMIT_AUTHOR
            value: $(tt.params.COMMIT_AUTHOR)
          - name: COMMIT_MESSAGE
            value: $(tt.params.COMMIT_MESSAGE)
          - name: IMAGE_REPO
            value: $(tt.params.IMAGE_REPO)
          - name: IMAGE_TAG
            value: $(tt.params.GIT_REF)-$(tt.params.git-revision)
        pipelineRef:
          name: '{{ .Values.app.name }}-pipeline'
        serviceAccountName: pipeline
        timeout: 1h0m0s
        workspaces:
          - name: workspace
            persistentVolumeClaim:
              claimName: a-quarkus-app-build-pvc
          - name: maven-settings
            emptyDir: {}
          - name: maven-local-repo
            persistentVolumeClaim:
              claimName: m2repo-pvc
          # - name: workspace
          #   volumeClaimTemplate:
          #     spec:
          #       accessModes:
          #         - ReadWriteOnce
          #       resources:
          #         requests:
          #           storage: 1Gi
          # - name: maven-settings
          #   volumeClaimTemplate:
          #     spec:
          #       accessModes:
          #         - ReadWriteOnce
          #       resources:
          #         requests:
          #           storage: 2Gi
          #   # emptyDir: {}
          - name: gitcredential
            secret:
              secretName: '{{ .Values.app.name }}-github-pat'
          - name: secrets
            secret:
              secretName: gpg-public-key
